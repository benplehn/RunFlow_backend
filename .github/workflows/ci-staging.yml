name: Supabase CI STAGING

on:
  push:
    branches: [main, staging]
  pull_request:
    branches: [main, staging]

jobs:
  test:
    name: Run migrations & DB structure tests (staging)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Supabase CLI
        run: |
          mkdir -p .tmp_supabase_bin
          curl -L https://github.com/supabase/cli/releases/download/v2.33.7/supabase_linux_amd64.tar.gz -o .tmp_supabase_bin/supabase.tar.gz
          tar -xzf .tmp_supabase_bin/supabase.tar.gz -C .tmp_supabase_bin
          chmod +x .tmp_supabase_bin/supabase
          sudo mv .tmp_supabase_bin/supabase /usr/local/bin/supabase

      - name: Check Supabase CLI version
        run: supabase --version

      - name: Start Supabase services
        run: supabase start

      - name: Apply migrations (NEVER reset in prod)
        run: supabase db push

      - name: Install PostgreSQL client
        run: sudo apt-get update && sudo apt-get install -y postgresql-client

      - name: Test STRUCTURE ONLY de la table profiles (prod/staging)
        run: supabase/tests/scripts/test_db_profiles_structure.sh
        env:
          PGPASSWORD: postgres

  test-api:
    name: Test API REST (staging)
    runs-on: ubuntu-latest
    needs: test
    env:
      SUPABASE_API_URL: http://127.0.0.1:54321
      SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY_STAGING }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y curl jq

      - name: Signup utilisateur test
        run: |
          curl -X POST $SUPABASE_API_URL/auth/v1/signup \
            -H "Content-Type: application/json" \
            -H "apikey: $SUPABASE_ANON_KEY" \
            -d '{"email":"ciuser@example.com","password":"ci-password"}' || true

      - name: Login utilisateur test (générer JWT)
        id: login
        run: |
          TOKEN=$(curl -s -X POST "$SUPABASE_API_URL/auth/v1/token?grant_type=password" \
            -H "Content-Type: application/json" \
            -H "apikey: $SUPABASE_ANON_KEY" \
            -d '{"email":"ciuser@example.com","password":"ci-password"}' | jq -r '.access_token')

          echo "JWT=$TOKEN" >> "$GITHUB_ENV"

      - name: Test endpoint protégé /profiles
        run: |
          curl -f -s -X GET "$SUPABASE_API_URL/rest/v1/profiles?select=*" \
            -H "apikey: $SUPABASE_ANON_KEY" \
            -H "Authorization: Bearer $JWT"
